/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/mouse.h>

#define DEFLT 0
#define LOWER 1
#define RAISE 2
#define ADJST 3

// mouse move settings
#define MMV_U MOVE_VERT(-650)
#define MMV_D MOVE_VERT(650)
#define MMV_L MOVE_HOR(-650)
#define MMV_R MOVE_HOR(650)

&mmv {
  time-to-max-speed-ms = <500>;
  acceleration-exponent=<1>;
};

// mouse wheel settings
#define MWH_U SCROLL_VERT(15)
#define MWH_D SCROLL_VERT(-15)
#define MWH_L SCROLL_HOR(-15)
#define MWH_R SCROLL_HOR(15)

&mwh {
  time-to-max-speed-ms = <2000>;
  acceleration-exponent=<0>;
};

&mt {
  flavor = "tap-preferred";
  tapping-term-ms = <200>;
  quick-tap-ms = <200>;
};

&lt {
  flavor = "tap-preferred";
  tapping-term-ms = <200>;
  quick-tap-ms = <200>;
};

/ {

  behaviors {
    mp: mod_preferred {
      compatible = "zmk,behavior-hold-tap";
      label = "mod_preferred";
      flavor = "hold-preferred";
      tapping-term-ms = <200>;
      quick-tap-ms = <200>;
      #binding-cells = <2>;
      bindings = <&kp>, <&kp>;
    };

    lp: layer_preferred {
      compatible = "zmk,behavior-hold-tap";
      label = "layer_preferred";
      flavor = "hold-preferred";
      tapping-term-ms = <200>;
      quick-tap-ms = <200>;
      #binding-cells = <2>;
      bindings = <&mo>, <&kp>;
    };
  };

  keymap {
    compatible = "zmk,keymap";
    default_layer {
      bindings = <
                 &mt LCMD Y     &kp C    &kp L    &kp M    &kp K    &kp Z    &kp F    &kp U      &kp COMMA &mt RCMD APOS
                 &mt LSHFT I    &kp S    &kp R    &kp T    &kp G    &kp P    &kp N    &kp E      &kp A     &mt RSHFT O
                 &mt LALT Q     &kp V    &kp W    &kp D    &kp J    &kp B    &kp H    &kp SLASH  &kp DOT   &mt RALT X
                 &lp LOWER TAB  &mp LCTRL RET                       &kp SPACE  &lp RAISE BSPC
                 >;
    };

    lower_layer {
      bindings = <
                 &kp GRAVE &kp LBKT  &kp LBRC  &kp RBRC  &kp RBKT   &kp BSLH   &kp MINUS  &kp EQUAL  &kp SEMI   &kp APOS
                 &kp EXCL  &kp AT    &kp HASH  &kp DLLR  &kp PRCNT  &kp CARET  &kp AMPS   &kp ASTRK  &kp LPAR   &kp RPAR
                 &kp TILDE &kp C_MUTE &kp C_VOL_DN &kp C_VOL_UP &kp C_PP &kp PIPE &kp UNDER &kp PLUS &kp COLON  &kp DQT
                 &trans    &trans                                   &kp DEL    &mo ADJST
                 >;
    };

    raise_layer {
      bindings = <
                 &kp F1   &kp F2   &kp F3   &kp F4   &kp F5         &kp LEFT  &kp DOWN   &kp UP     &kp RIGHT  &kp F11
                 &kp N1   &kp N2   &kp N3   &kp N4   &kp N5         &kp N6    &kp N7     &kp N8     &kp N9     &kp N0
                 &kp F6   &kp F7   &kp F8   &kp F9   &kp F10        &kp HOME  &kp PG_DN  &kp PG_UP  &kp END    &kp F12
                 &mo ADJST   &gresc                                 &trans    &trans
                 >;
    };

    adjust_layer {
      bindings = <
                 &bt BT_CLR    &none    &none    &none    &none    &none       &mwh MWH_U  &mwh MWH_D  &none       &kp PSCRN
                 &bt BT_NXT    &none    &none    &none    &none    &mmv MMV_L  &mmv MMV_D  &mmv MMV_U  &mmv MMV_R  &kp INS
                 &out OUT_TOG  &none    &none    &none    &none    &none       &mkp MCLK   &mkp MB4    &mkp MB5    &trans
                 &trans        &trans                              &mkp LCLK   &mkp RCLK
                 >;
    };

  };
};
