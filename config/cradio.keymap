/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>

#define DEFLT 0
#define LOWER 1
#define RAISE 2
#define ADJST 3

&mt {
  flavor = "tap-preferred";
  tapping-term-ms = <200>;
  quick-tap-ms = <200>;
};

&lt {
  flavor = "tap-preferred";
  tapping-term-ms = <200>;
  quick-tap-ms = <200>;
};

/ {

  behaviors {
    mp: mod_preferred {
      compatible = "zmk,behavior-hold-tap";
      label = "MOD_PREFERRED";
      flavor = "hold-preferred";
      tapping-term-ms = <200>;
      quick-tap-ms = <0>;
      #binding-cells = <2>;
      bindings = <&kp>, <&kp>;
    };

    lp: layer_preferred {
      compatible = "zmk,behavior-hold-tap";
      label = "LAYER_PREFERRED";
      flavor = "hold-preferred";
      tapping-term-ms = <200>;
      quick-tap-ms = <0>;
      #binding-cells = <2>;
      bindings = <&mo>, <&kp>;
    };

    alt_p: mod_morph_alt_p {
      compatible = "zmk,behavior-mod-morph";
      label = "MOD_MORPH_ALT_P";
      #binding-cells = <0>;
      bindings = <&mt RALT P>, <&kp P>;
      mods = <(MOD_LCTL|MOD_LSFT|MOD_LALT)>;
    };
  };

  keymap {
    compatible = "zmk,keymap";
    default_layer {
      bindings = <
                 &mt LALT Q  &kp W &kp E &kp R &kp T               &kp Y &kp U &kp I &kp O &alt_p
                 &mt LCTRL A &kp S &kp D &kp F &kp G               &kp H &kp J &kp K &kp L &mp RCTRL SEMI
                 &mt LSHFT Z &kp X &kp C &kp V &kp B               &kp N &kp M &kp COMMA &kp DOT &mp RSHFT SLASH
                 &lp LOWER RET &lp RAISE ESC                       &mp LCMD BSPC &kp SPACE
                 >;
    };

    lower_layer {
      bindings = <
                 &mt LALT EXCL   &kp AT    &kp HASH  &kp DLLR  &kp PRCNT &kp CARET &kp AMPS  &kp ASTRK &kp PIPE  &mt RALT BSLH
                 &mt LCTRL GRAVE &kp APOS  &kp LPAR  &kp RPAR  &kp DQT   &kp PLUS  &kp MINUS &kp UNDER &kp COLON &mt RCTRL SEMI
                 &mt LSHFT TILDE &kp LBKT  &kp LBRC  &kp RBRC  &kp RBKT  &kp QMARK &kp EQUAL &kp LT    &kp GT    &mt RSHFT SLASH
                 &mo ADJST       &mo ADJST                               &sk LCMD  &kp SPACE
                 >;
    };

    raise_layer {
      bindings = <
                 &mt LALT INS   &kp HOME  &kp UP    &kp END   &kp DEL   &kp PLUS  &kp N7    &kp N8    &kp N9    &mt RALT MINUS
                 &mt LCTRL ESC  &kp LEFT  &kp DOWN  &kp RIGHT &kp TAB   &kp DOT   &kp N4    &kp N5    &kp N6    &mt RCTRL COLON
                 &mt LSHFT CAPS &kp K_APP &kp PG_UP &kp PG_DN &kp BSPC  &kp N0    &kp N1    &kp N2    &kp N3    &mt RSHFT SLASH
                 &mo ADJST      &mo ADJST                               &sk RCMD  &kp SPACE
                 >;
    };

    adjust_layer {
      bindings = <
                 &mt LALT F1   &kp F2    &kp F3    &kp F4       &kp F5       &bt BT_PRV &none      &none        &none        &kp RALT
                 &mt LCTRL F6  &kp F7    &kp F8    &kp F9       &kp F10      &bt BT_CLR &none      &none        &none        &kp RCTRL
                 &mt LSHFT F11 &kp F12   &kp PSCRN &out OUT_BLE &out OUT_USB &bt BT_NXT &kp C_MUTE &kp C_VOL_DN &kp C_VOL_UP &kp RSHFT
                 &none         &none                                         &none      &none
                 >;
    };

  };
};
